(function() {var implementors = {};
implementors["epic_chain"] = [{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"struct\" href=\"epic_chain/txhashset/struct.BitmapChunk.html\" title=\"struct epic_chain::txhashset::BitmapChunk\">BitmapChunk</a>","synthetic":false,"types":["epic_chain::txhashset::bitmap_accumulator::BitmapChunk"]},{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"struct\" href=\"epic_chain/types/struct.CommitPos.html\" title=\"struct epic_chain::types::CommitPos\">CommitPos</a>","synthetic":false,"types":["epic_chain::types::CommitPos"]},{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"struct\" href=\"epic_chain/types/struct.Tip.html\" title=\"struct epic_chain::types::Tip\">Tip</a>","synthetic":false,"types":["epic_chain::types::Tip"]}];
implementors["epic_core"] = [];
implementors["epic_p2p"] = [{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"enum\" href=\"epic_p2p/msg/enum.MsgHeaderWrapper.html\" title=\"enum epic_p2p::msg::MsgHeaderWrapper\">MsgHeaderWrapper</a>","synthetic":false,"types":["epic_p2p::msg::MsgHeaderWrapper"]},{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"struct\" href=\"epic_p2p/msg/struct.Hand.html\" title=\"struct epic_p2p::msg::Hand\">Hand</a>","synthetic":false,"types":["epic_p2p::msg::Hand"]},{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"struct\" href=\"epic_p2p/msg/struct.Shake.html\" title=\"struct epic_p2p::msg::Shake\">Shake</a>","synthetic":false,"types":["epic_p2p::msg::Shake"]},{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"struct\" href=\"epic_p2p/msg/struct.GetPeerAddrs.html\" title=\"struct epic_p2p::msg::GetPeerAddrs\">GetPeerAddrs</a>","synthetic":false,"types":["epic_p2p::msg::GetPeerAddrs"]},{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"struct\" href=\"epic_p2p/msg/struct.PeerAddrs.html\" title=\"struct epic_p2p::msg::PeerAddrs\">PeerAddrs</a>","synthetic":false,"types":["epic_p2p::msg::PeerAddrs"]},{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"struct\" href=\"epic_p2p/msg/struct.PeerError.html\" title=\"struct epic_p2p::msg::PeerError\">PeerError</a>","synthetic":false,"types":["epic_p2p::msg::PeerError"]},{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"struct\" href=\"epic_p2p/msg/struct.Locator.html\" title=\"struct epic_p2p::msg::Locator\">Locator</a>","synthetic":false,"types":["epic_p2p::msg::Locator"]},{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"struct\" href=\"epic_p2p/msg/struct.Ping.html\" title=\"struct epic_p2p::msg::Ping\">Ping</a>","synthetic":false,"types":["epic_p2p::msg::Ping"]},{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"struct\" href=\"epic_p2p/msg/struct.Pong.html\" title=\"struct epic_p2p::msg::Pong\">Pong</a>","synthetic":false,"types":["epic_p2p::msg::Pong"]},{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"struct\" href=\"epic_p2p/msg/struct.BanReason.html\" title=\"struct epic_p2p::msg::BanReason\">BanReason</a>","synthetic":false,"types":["epic_p2p::msg::BanReason"]},{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"struct\" href=\"epic_p2p/msg/struct.TxHashSetRequest.html\" title=\"struct epic_p2p::msg::TxHashSetRequest\">TxHashSetRequest</a>","synthetic":false,"types":["epic_p2p::msg::TxHashSetRequest"]},{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"struct\" href=\"epic_p2p/msg/struct.TxHashSetArchive.html\" title=\"struct epic_p2p::msg::TxHashSetArchive\">TxHashSetArchive</a>","synthetic":false,"types":["epic_p2p::msg::TxHashSetArchive"]},{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"struct\" href=\"epic_p2p/msg/struct.KernelDataResponse.html\" title=\"struct epic_p2p::msg::KernelDataResponse\">KernelDataResponse</a>","synthetic":false,"types":["epic_p2p::msg::KernelDataResponse"]},{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"struct\" href=\"epic_p2p/struct.PeerData.html\" title=\"struct epic_p2p::PeerData\">PeerData</a>","synthetic":false,"types":["epic_p2p::store::PeerData"]},{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"struct\" href=\"epic_p2p/types/struct.PeerAddr.html\" title=\"struct epic_p2p::types::PeerAddr\">PeerAddr</a>","synthetic":false,"types":["epic_p2p::types::PeerAddr"]}];
implementors["epic_store"] = [{"text":"impl <a class=\"trait\" href=\"epic_core/ser/trait.Readable.html\" title=\"trait epic_core::ser::Readable\">Readable</a> for <a class=\"struct\" href=\"epic_store/types/struct.SizeEntry.html\" title=\"struct epic_store::types::SizeEntry\">SizeEntry</a>","synthetic":false,"types":["epic_store::types::SizeEntry"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
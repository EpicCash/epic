initSidebarItems({"enum":[["PoWType",""],["Proof","A proof of work"]],"fn":[["mine_genesis_block","Mines a genesis block using the internal miner"],["pow_size","Runs a proof of work computation over the provided block using the provided Mining Worker, until the required difficulty target is reached. May take a while for a low targetâ€¦"],["verify_size","Validates the proof of work of a given header, and that the proof of work satisfies the requirements of the header."]],"mod":[["cuckaroo","Implementation of Cuckaroo Cycle, based on Cuckoo Cycle designed by John Tromp. Ported to Rust from https://github.com/tromp/cuckoo."],["cuckatoo","Implementation of Cuckatoo Cycle designed by John Tromp."],["lean","Lean miner for Cuckatoo Cycle"],["md5","Implementation of MD5 by Yuri Albuquerque"],["progpow",""],["randomx",""]],"struct":[["Difficulty","The difficulty is defined as the maximum target divided by the block hash."],["Error","Cuckatoo solver or validation error"],["ProofOfWork","Block header information pertaining to the proof of work"]],"trait":[["DifficultyNumberBasic",""],["EdgeType","Operations needed for edge type (going to be u32 or u64)"],["PoWContext","Generic trait for a solver/verifier providing common interface into Cuckoo-family PoW Mostly used for verification, but also for test mining if necessary"]],"type":[["DifficultyNumber",""]]});